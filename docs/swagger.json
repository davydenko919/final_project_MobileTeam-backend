{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "TrackWaterAppDoc",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of TrackWaterApp"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    },
    {
      "url": "https://final-project-mobileteam-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations about water."
    },
    {
      "name": "User",
      "description": "User operations."
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register user",
        "operationId": "registerController",
        "description": "Register a new user by providing email and password. The email must be unique, and the password will be securely hashed before storing in the database.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "jane.doe@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "awfawfawf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "gender",
                        "createdAt",
                        "updatedAt",
                        "sportHours",
                        "weight",
                        "photo"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "6745fd4047be484107443d1c"
                        },
                        "name": {
                          "type": "string",
                          "example": "testname"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@gmail.com"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "man",
                            "woman"
                          ],
                          "example": "man"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-26T16:54:24.922Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-26T17:06:35.823Z"
                        },
                        "sportHours": {
                          "type": "integer",
                          "example": 31,
                          "description": "Total hours spent on sports activities."
                        },
                        "weight": {
                          "type": "number",
                          "format": "float",
                          "example": 13,
                          "description": "User weight in kilograms."
                        },
                        "waterNorm": {
                          "type": "number",
                          "example": 1500,
                          "description": "Users water norm in ml."
                        },
                        "photo": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dnepourus/image/upload/v1732640796/ffzgnlx8rznuauv2etlj.jpg",
                          "description": "URL of the user profile photo."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "operationId": "loginController",
        "description": "Login user by providing email and password. The system will set cookies for the refresh token and session ID and return an access token.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "example": "jane.doe@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "awfawfawf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login completed successfully and cookies are set",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login completed"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "zGP0/lTNuKX/X+hzmZ9fMZBAixqBfb1NRo+H8/xP",
                          "description": "Access token for authenticated requests."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/info": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user info",
        "operationId": "infoController",
        "description": "Get information about user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "gender",
                        "createdAt",
                        "updatedAt",
                        "sportHours",
                        "weight",
                        "photo"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "6745fd4047be484107443d1c"
                        },
                        "name": {
                          "type": "string",
                          "example": "testname"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@gmail.com"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "man",
                            "woman"
                          ],
                          "example": "man"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-26T16:54:24.922Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-26T17:06:35.823Z"
                        },
                        "sportHours": {
                          "type": "integer",
                          "example": 31,
                          "description": "Total hours spent on sports activities."
                        },
                        "weight": {
                          "type": "number",
                          "format": "float",
                          "example": 13,
                          "description": "User weight in kilograms."
                        },
                        "waterNorm": {
                          "type": "number",
                          "example": 1500,
                          "description": "Users water norm in ml."
                        },
                        "photo": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://res.cloudinary.com/dnepourus/image/upload/v1732640796/ffzgnlx8rznuauv2etlj.jpg",
                          "description": "URL of the user profile photo."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch user",
        "operationId": "patchContactController",
        "description": "Patch a contact with the provided payload and id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "email": {
                    "description": "Contact's email address",
                    "type": "string",
                    "example": "jane.doe@example.com"
                  },
                  "gender": {
                    "description": "gender of contact",
                    "type": "string",
                    "enum": [
                      "man",
                      "woman"
                    ],
                    "default": "woman",
                    "example": "woman"
                  },
                  "weight": {
                    "type": "number",
                    "format": "float",
                    "example": 13,
                    "description": "User weight in kilograms."
                  },
                  "sportHours": {
                    "type": "integer",
                    "example": 31,
                    "description": "Total hours spent on sports activities."
                  },
                  "waterNorm": {
                    "type": "integer",
                    "example": 1332,
                    "description": "Total liters of water user shoud drink."
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "gender",
                        "createdAt",
                        "updatedAt",
                        "sportHours",
                        "weight",
                        "photo"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "6745fd4047be484107443d1c",
                          "description": "The unique identifier of the user."
                        },
                        "name": {
                          "type": "string",
                          "example": "testname",
                          "description": "The name of the user."
                        },
                        "email": {
                          "type": "string",
                          "example": "user@gmail.com",
                          "description": "The email address of the user."
                        },
                        "gender": {
                          "type": "string",
                          "example": "man",
                          "description": "The gender of the user."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-26T16:54:24.922Z",
                          "description": "Timestamp when the user was created."
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-11-26T19:00:53.813Z",
                          "description": "Timestamp when the user was last updated."
                        },
                        "sportHours": {
                          "type": "integer",
                          "example": 31,
                          "description": "The number of hours the user has spent on sport."
                        },
                        "weight": {
                          "type": "integer",
                          "example": 13,
                          "description": "The weight of the user."
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dnepourus/image/upload/v1732647654/ebmio3lwf3dzvgxrnl6e.jpg",
                          "description": "The URL of the user's photo."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "logout",
        "operationId": "logoutController",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logout!"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "refresh access",
        "operationId": "refreshController",
        "description": "refresh session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logout!"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/participants": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get number of users",
        "operationId": "totalNumberUsers",
        "description": "Get information about number of user",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found number of users!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found number of users!"
                    },
                    "data": {
                      "type": "number",
                      "example": 13,
                      "description": "Total number of users"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}